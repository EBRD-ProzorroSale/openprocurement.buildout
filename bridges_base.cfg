[buildout]
parts =
    awscli
    circus
    circusd
    circusctl
    circus.ini
    logrotate.conf
    logrotate-hourly
    autostart

extends = base.cfg versions.cfg
eggs =
extensions =
show-picked-versions = true
update-versions-file = versions.cfg

[circus.ini]
<= config-from-template
statsd =
endpoint = ipc://${buildout:directory}/var/circus_endpoint
pubsub_endpoint = ipc://${buildout:directory}/var/circus_pubsub
timezone = Europe/Kiev
contracting_data_bridge =
competitive_dialogue_data_bridge =
couchdb =
concord =
webapp =
penstock =
vaurien =
chronograph =
sandbox_mode =

[contracting_data_bridge]
recipe = zc.recipe.egg
eggs =
    openprocurement.contracting.api [databridge]
scripts = contracting_data_bridge

[redis_db_dir]
recipe = z3c.recipe.mkdir
paths = ${buildout:directory}/var/redis

[redis.cfg]
<= config-from-template
port = 6379
dir = ${buildout:directory}/var/redis
logfile = ${buildout:directory}/var/log/redis.log

[contracting_data_bridge.yaml]
<= config-from-template
tenders_api_server = https://lb.api-sandbox.openprocurement.org
public_tenders_api_server = http://public.api-sandbox.openprocurement.org
buffers_size = 500
jobs_watcher_delay = 15
full_stack_sync_delay = 15
empty_stack_sync_delay = 101
on_error_sleep_delay = 5
tenders_api_version = 0
contracting_api_server = https://lb.api-sandbox.openprocurement.org
contracting_api_version = 0
api_token = contracting_secret
cache_db_name = 0
cache_host = 127.0.0.1
cache_port = ${redis.cfg:port}

[competitive_dialogue_data_bridge]
recipe = zc.recipe.egg
eggs =
    openprocurement.tender.competitivedialogue [databridge]
scripts = competitive_dialogue_data_bridge

[competitive_dialogue_data_bridge.yaml]
<= config-from-template
tenders_api_server = https://api-sandbox.openprocurement.org
tenders_api_version = 0
api_token = competitive_dialogue_secret

[logrotate.conf]
<= config-from-template
logs_bucket =
logs_dir =
aws_access_key =
aws_secret_key =

[logrotate-hourly]
recipe = z3c.recipe.usercrontab
times = @hourly
command = /usr/sbin/logrotate --state ${buildout:directory}/var/logrotate.status ${logrotate.conf:output} >>${buildout:directory}/var/log/logrotate.log 2>&1

[autostart]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:directory}/bin/circusd --daemon --pidfile ${buildout:directory}/circus.pid

[flush_redis]
recipe = collective.recipe.template
inline =
    #!/bin/bash
    while true; do
        read -p "Data bridge cache will be erased. Are you sure you want to delete this data? (Data location:${contracting_data_bridge.yaml:cache_host}:${contracting_data_bridge.yaml:cache_port}, DB name:${contracting_data_bridge.yaml:cache_db_name})
        Type y/n?" yn
        case $yn in
            [Yy]* ) redis-cli -h ${contracting_data_bridge.yaml:cache_host} -p ${contracting_data_bridge.yaml:cache_port} -n ${contracting_data_bridge.yaml:cache_db_name} flushdb; break;;
            [Nn]* ) exit;;
            * ) echo "Please answer y(es) or n(o).";;
        esac
    done
output = ${buildout:bin-directory}/${:_buildout_section_name_}
mode = 755
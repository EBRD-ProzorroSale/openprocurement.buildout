[buildout]
parts =
    python
    circus
    circusd
    circus.ini
    couchdb.ini
    couchpy
    pyramid
    api
    docs

eggs =
    cornice

extensions = mr.developer

[sources]
openprocurement.api = git git@github.com:openprocurement/openprocurement.api.git


[python]
recipe = zc.recipe.egg
interpreter = python
eggs = ${buildout:eggs}

[couchpy]
recipe = zc.recipe.egg:scripts
eggs = CouchDB
scripts =
    couchpy

[circus]
recipe = zc.recipe.egg:scripts
eggs = 
    chaussette
    gevent
    circus
    circus-web
    ${pyramid:eggs}
scripts = 
    chaussette
    circusd-stats
    circus-top
    circusctl
    circus-plugin
    circushttpd

[circusd]
<=circus
initialization =
    sys.argv[1:1] = ('${buildout:directory}/etc/circus.ini').split()
scripts = circusd

[config-from-template]
recipe = collective.recipe.template
input = templates/${:_buildout_section_name_}
output = etc/${:_buildout_section_name_}

[circus.ini]
<= config-from-template

[couchdb.ini]
<= config-from-template

[api]
recipe = zc.recipe.egg
package-name = openprocurement.api
eggs =
    ${:package-name}

[pyramid]
recipe = zc.recipe.egg
dependent-scripts = true
eggs = 
    pyramid
    nose
    WebTest
    ${buildout:eggs}
    ${api:package-name}
scripts =
    pserve
    nosetests

[docs]
recipe = collective.recipe.sphinxbuilder
eggs =
    ${api:package-name}
source =
    ${buildout:directory}/src/openprocurement.api/docs/source


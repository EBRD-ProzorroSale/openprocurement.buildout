[circus]
check_delay = 5
endpoint = ${options['endpoint']}
pubsub_endpoint = ${options['pubsub_endpoint']}
umask = 002
logoutput = ${parts.buildout.directory}/var/log/circus.log
httpd = ${options['httpd']}
httpd_host = ${options['httpd_host']}
httpd_port = ${options['httpd_port']}
statsd = ${options['statsd']}

[watcher:db]
cmd = couchdb
args = -a ${parts.buildout.directory}/etc/couchdb.ini
stdout_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/couchdb.stdout.log
stdout_stream.max_bytes = ${options['log_size']}
stdout_stream.backup_count = 5
stderr_stream.class = FileStream
stderr_stream.filename = ${parts.buildout.directory}/var/log/couchdb.stderr.log
stderr_stream.max_bytes = ${options['log_size']}
stderr_stream.backup_count = 5

[env:db]
HOME = ${parts.buildout.directory}/var

[env]
TZ = ${options['timezone']}

{% if options['webapp'] %}
[watcher:webapp]
cmd = ${parts.buildout.directory}/bin/chaussette --fd $(circus.sockets.web) --backend=gevent paste:${parts.buildout.directory}/etc/openprocurement.api.ini
numprocesses = 1
use_sockets = True
stdout_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/webapp.stdout.log
stdout_stream.max_bytes = ${options['log_size']}
stdout_stream.backup_count = 5
stderr_stream.class = FileStream
stderr_stream.filename = ${parts.buildout.directory}/var/log/webapp.stderr.log
stderr_stream.max_bytes = ${options['log_size']}
stderr_stream.backup_count = 5

[socket:web]
host = ${options['web_host']}
port = ${options['web_port']}
{% end %}

{% if options['chronograph'] %}
[watcher:chronograph]
cmd = ${parts.buildout.directory}/bin/chaussette --fd $(circus.sockets.chronograph) --backend=waitress paste:${parts.buildout.directory}/etc/chronograph.ini
numprocesses = 1
use_sockets = True
stdout_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/chronograph.stdout.log
stdout_stream.max_bytes = ${options['log_size']}
stdout_stream.backup_count = 5
stderr_stream.class = FileStream
stderr_stream.filename = ${parts.buildout.directory}/var/log/chronograph.stderr.log
stderr_stream.max_bytes = ${options['log_size']}
stderr_stream.backup_count = 5

[socket:chronograph]
host = ${options['chronograph_host']}
port = ${options['chronograph_port']}
{% end %}
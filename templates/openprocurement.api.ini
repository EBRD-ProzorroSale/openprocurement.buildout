[app:main]
use = egg:openprocurement.api
couchdb.db_name = ${options['couchdb_db']}
couchdb.url = ${options['couchdb_url']}
auth.file = ${options['auth_file']}
pyramid.reload_templates = ${options['debug']}
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = ${options['debug']}
pyramid.default_locale_name = en
{% if 'aws_access_key' in options %}
aws.s3_bucket = ${options['aws_s3_bucket']}
aws.access_key = ${options['aws_access_key']}
aws.secret_key = ${options['aws_secret_key']}
{% end %}
{% if options['debug'] == 'true' %}
filter-with = profile

[filter:profile]
use = egg:repoze.profile
log_filename = myapp.profile
cachegrind_filename = cachegrind.out.myapp
discard_first_request = true
path = /__profile__
flush_at_shutdown = true
unwind = false
{% end %}
{% if options['debug'] == 'false' %}
filter-with = proxy-prefix

[filter:proxy-prefix]
use = egg:PasteDeploy#prefix
{% end %}

[server:main]
use = egg:chaussette
host = 0.0.0.0
port = 6543
backend = gevent

# Begin logging configuration

[loggers]
keys = root, openprocurement_api

[handlers]
keys = console${',loggly' if 'loggly' in options else ''}

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console${',loggly' if 'loggly' in options else ''}

[logger_openprocurement_api]
level = DEBUG
handlers =
qualname = openprocurement.api

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

{% if 'loggly' in options %}
[handler_loggly]
class=loggly.handlers.HTTPSHandler
args=('https://logs-01.loggly.com/inputs/${options['loggly']}/tag/python,api/','POST')
{% end %}

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
